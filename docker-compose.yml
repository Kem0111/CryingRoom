version: "3.8"

services:
  # admin:
  #   build:
  #     context: .
  #     dockerfile: docker_admin/Dockerfile
  #   env_file:
  #     .env
  #   ports:
  #     - "8000:80"
  #   volumes:
  #     - media:/code/media
  #   restart: always
  #   depends_on:
  #     db:
  #       condition: service_healthy

  bot:
    build:
      context: .
      dockerfile: docker_bot/Dockerfile
    restart: always
    env_file:
      - .env
    volumes:
      - media:/code/media


  db:
    image: postgres:latest
    env_file:
      .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - crying_room_pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB'"]
      interval: 5s
      timeout: 5s
      retries: 5

  # nginx:
  #   restart: always
  #   image: nginx:latest
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/conf.d/default.conf
  #     - media:/code/media
  #   depends_on:
  #     - admin

volumes:
  crying_room_pg_data:
  media:
